#############################################################################
##  日志输出级别，共有5级：
## FATAL       0  
## ERROR      3  
## WARN       4  
## INFO         6  
## DEBUG      7 

## Appender 为日志输出目的地，Log4j提供的appender有以下几种：
## org.apache.log4j.ConsoleAppender（控制台），
## org.apache.log4j.FileAppender（文件），
## org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
## org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
## org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）

## Layout：日志输出格式，Log4j提供的layout有以下几种：

## org.apache.log4j.HTMLLayout（以HTML表格形式布局），
## org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
## org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
## org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息） 

##  打印参数: ##
##　     %m   输出代码中指定的消息
##　　%p   输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 
##　　%r   输出自应用启动到输出该log信息耗费的毫秒数 
##　　%c   输出所属的类目，通常就是所在类的全名 
##　　%t   输出产生该日志事件的线程名 
##　　%n   输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n” 
##　　%d   输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002年10月18日  22 ： 10 ： 28 ， 921  
##　　%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: 10 )  

#######################################################################################################################
### set log levels ###
log4j.rootLogger = DEBUG ,console ,D 

### to stdout ###
log4j.appender.console = org.apache.log4j.ConsoleAppender
log4j.appender.console.Target = System.out
log4j.appender.console.Threshold=INFO
log4j.appender.console.layout = org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern = %d{ABSOLUTE} %5p %c{1}\:%L - %m%n  
## log4j.appender.console.layout.ConversionPattern = %d -%-4r [%t] %-5p %c %x - %m%n

### to file ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = ${spdHDI.root}/logs/spdHDI-log.log
log4j.appender.D.File.Encoding = UTF-8
log4j.appender.D.DatePattern=yyyy-MM-dd'.log'
log4j.appender.D.Append = true
log4j.appender.D.Threshold = INFO  
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern =[%p] %-d{yyyy-MM-dd HH:mm:ss.SSS}  %c{1}:%L - %m%n

log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=${spdHDI.root}/logs/spdHDI-portal.log
log4j.appender.R.Encoding=UTF-8
log4j.appender.R.MaxFileSize=10MB
log4j.appender.R.Append=true
log4j.appender.R.MaxBackupIndex=10
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%-d %t %-5p [%c{1}:%L] %m%n

