<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 引入接口，只要实现接口的方法就会调用对应接口方法的 select id -->
<mapper namespace="gyqx.spdhdi.myGoods.dao.mapper.IProvGoodsInfoMapper">
	<!-- parameterType传入参数类型 resultMap=自己定义的一个返回类型 resultType返回类型 -->
	<select id="getProvGoodsInfoList" resultMap="ProvGoodsInfoVoMap"
		parameterType="gyqx.spdhdi.po.ProvGoodsInfo">
	    select m.mfrs_name as mfrsName,pg.* from  prov_goods_info  pg  
	    left JOIN bas_mfrs_info m 
	    on pg.mfrs_id = m.id
		<where>
			1=1 and pg.flag=1 
			<if test='goodsName != null and goodsName !=""'>
			 <bind name="goodsName" value="'%' + goodsName + '%'" />
				and  
				(
					pg.goods_name like  #{goodsName} 
					or pg.short_pinyin like  #{goodsName}
					or pg.goods_gg like #{goodsName}
				)
			
			</if>
			<if test='provId != null and provId !=""'>
				and pg.prov_id= #{provId} 
			</if>
			<if test='mfrsId != null and mfrsId !=""'>
				and m.mfrs_id= #{mfrsId} 
			</if>
			order by pg.id
		</where>
	</select>
	
	<select id="getProvGoodsHos" resultMap="ProvGoodsInfoVoMap"
		parameterType="gyqx.spdhdi.myGoods.vo.ProvGoodsHosVo">
	    select m.mfrs_name as mfrsName,pg.* from  prov_goods_info  pg  
	    left JOIN bas_mfrs_info m 
	    on pg.mfrs_id = m.id
		<where>
			1=1 and pg.flag=1 
			<if test='goodsName != null and goodsName !=""'>
			 <bind name="goodsName" value="'%' + goodsName + '%'" />
				and   
				(
					pg.goods_name LIKE  #{goodsName}
					or pg.short_pinyin LIKE  #{goodsName}
				    or pg.goods_gg like #{goodsName}
				)
			
			</if>
			<if test='provId != null and provId !=""'>
				and pg.prov_id= #{provId} 
			</if>
			<if test='mfrsId != null and mfrsId !=""'>
				and m.mfrs_id= #{mfrsId} 
			</if>
			<!-- 如果参数中有医院id,则认为是供货目录模块批量导入使用,需要对供应商下当前医院已经导入的商品进行过滤,防止重复导入 -->
			<if test='hosId != null and hosId !=""'>
				AND NOT EXISTS (
					SELECT
						ph.prov_goodsid
					FROM
						prov_goods_hos ph
					WHERE
						ph.prov_goodsid = pg.id and ph.hos_id=#{hosId} and ph.prov_id=#{provId} and ph.flag=1
				) 
			</if>
			order by pg.id
		</where>
	</select>
	
	<select id="getProvGoodsInfoListByProvAndHos" resultMap="ProvGoodsInfoVoMap"
		parameterType="gyqx.spdhdi.po.ProvGoodsHos">
	  select DISTINCT p.*,m.mfrs_name as mfrsName  from prov_goods_info p  
	  	   JOIN prov_goods_hos ph on ph.prov_goodsid=p.id 
       left    join bas_mfrs_info m  on p.mfrs_id = m.id
		<where>
			1=1 and p.flag=1 
			<if test='provId != null and provId !=""'>
		
				and  ph.prov_id = #{provId}
			
			</if>
			<if test='hosId != null and hosId !=""'>
			   and  ph.hos_id= #{hosId} 
			</if>
			<if test='hisName != null and hisName !=""'>
			   <bind name="hisName" value="'%' + hisName + '%'" />
				and   
				(
					p.goods_name LIKE  #{hisName}
					or p.short_pinyin LIKE  #{hisName}
					or p.goods_gg LIKE  #{hisName}
				)
			
			</if>
			and  p.mfrs_code is null
			order by p.id
		</where>
	</select>

	<!-- 批量更新注册证号 -->
	<update id="updateCertificateCodeByBatch" parameterType="java.util.List" databaseId="mysql">
		<foreach collection="list" item="item" index="index" open=""
				 close="" separator=";">
			update prov_goods_info
			<set>
				<if test='item.certificateCode != null'>
					certificate_code = #{item.certificateCode},
				</if>
				last_update_datetime = sysdate(),
				version=version+1
			</set>
			where id = #{item.id}
		</foreach>
	</update>
	<update id="updateCertificateCodeByBatch" parameterType="java.util.List" databaseId="oracle">
		<foreach collection="list" item="item" index="index" open="begin"
				 close=";end;" separator=";">
			update prov_goods_info
			<set>
				<if test='item.certificateCode != null'>
					certificate_code = #{item.certificateCode},
				</if>
				last_update_datetime = sysdate,
				version=version+1
			</set>
			where id = #{item.id}
		</foreach>
	</update>
	<resultMap type="gyqx.spdhdi.myGoods.vo.ProvGoodsInfoVo" id="ProvGoodsInfoVoMap">
		<id property="id" column="id"/> 
		<result property="provId" column="prov_id"/>
		<result property="code" column="code"/>
		<result property="goodsName"  column="goods_name"/>
		<result property="shortPinyin"  column="short_pinyin"/>
		<result property="goodsGg"  column="goods_gg"/>
		<result property="brand"  column="brand"/>
		<result property="made"  column="made"/>
		<result property="mfrsId"  column="mfrs_id"/>
		<result property="unit"  column="unit"/>
		<result property="packeage"  column="packeage"/>
		<result property="masterCode"  column="master_code"/>
	    <result property="mfrsCode"  column="mfrs_code"/>
		<result property="kindCode"  column="kind_code"/>
		<result property="kind68code"  column="kind_68code"/>
		<result property="erpCode"  column="erp_code"/>
		<result property="hitCode"  column="hit_code"/>
		<result property="hitPrice"  column="hit_price"/>
		<result property="spdGoodsCode"  column="spd_goods_code"/>
		<result property="fieldCode2"  column="field_code2"/>
		<result property="fieldCode3" column="field_code3"/>   
		<result property="fieldCode4" column="field_code4"/>
		<result property="lbsx" column="lbsx"/>   
		<result property="flag" column="flag"/> 
		<result property="remark" column="remark"/>
		<result property="uid" column="uxid"/>
		<result property="fillDate" column="fill_date"/>   
		<result property="lastUpdateDatetime" column="last_update_datetime"/>
		<result property="version" column="version"/>
		<result property="mfrsName" column="mfrsName"/>
	</resultMap>  
	
</mapper>