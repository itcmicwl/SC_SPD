package gyqx.ws.yg.hos;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2017-11-28T14:21:57.941+08:00
 * Generated source version: 3.1.12
 * 
 */
@WebServiceClient(name = "SendRecv", 
                  wsdlLocation = "http://128.100.208.20/ysxtqx-ws/services/dispatcher?wsdl",
                  targetNamespace = "http://ws.framework.shys.wondersgroup.com/") 
public class SendRecv_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ws.framework.shys.wondersgroup.com/", "SendRecv");
    public final static QName Dispatcher = new QName("http://ws.framework.shys.wondersgroup.com/", "dispatcher");
    static {
        URL url = null;
        try {
            url = new URL("http://128.100.208.20/ysxtqx-ws/services/dispatcher?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SendRecv_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", url.getPath().toString());
        }
        WSDL_LOCATION = url;
    }

    public SendRecv_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SendRecv_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SendRecv_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public SendRecv_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SendRecv_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SendRecv_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns DispatcherService
     */
    @WebEndpoint(name = "dispatcher")
    public DispatcherService getDispatcher() {
        return super.getPort(Dispatcher, DispatcherService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DispatcherService
     */
    @WebEndpoint(name = "dispatcher")
    public DispatcherService getDispatcher(WebServiceFeature... features) {
        return super.getPort(Dispatcher, DispatcherService.class, features);
    }

}
