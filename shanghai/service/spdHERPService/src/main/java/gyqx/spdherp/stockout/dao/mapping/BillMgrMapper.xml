<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gyqx.spdherp.stockout.dao.mapper.BillMgrMapper" >
    <select id="listSysOrgByCorpId" resultMap="gyqx.spdherp.stockout.dao.mapper.RequestOutMapper.sysOrgVoResultMap">
        SELECT
            org.id,
            org.pid,
            org.ename,
            COUNT( os.id ) AS bill_count,
            CASE WHEN org.id IN (SELECT dept_id FROM hos_dept_pur_stock  WHERE hos_id = #{corpId} AND stock_id = #{deptId} ) THEN 1
            ELSE 0
            END AS available
        FROM sys_org org
            LEFT OUTER JOIN out_stock os ON (
                os.in_dept_id = org.id
                AND os.out_org_id = org.corp_id
                AND os.out_stoc_id = #{stockId}
                <choose>
                    <when test="submitted == true">
                        AND os.status = 10
                    </when>
                    <otherwise>
                        AND os.status IN ( 10, 20, 90 )
                    </otherwise>
                </choose>
                AND os.out_stock_type IN ( SELECT pur_mode FROM apply_audit_rel where user_id =#{userId} )
            )
        <where>
            org.corp_id = #{corpId}
            AND org.flag = '1'
        </where>
        GROUP BY org.id
    </select>

    <resultMap id="OutStockBillBriefVoResultMap" type="gyqx.spdherp.stockout.vo.OutStockBillBriefVo">
        <id property="id" column="id"/>
        <result property="outStockKind" column="out_stock_kind"/>
        <result property="outStockType" column="out_stock_type"/>
        <result property="outDeptName" column="out_dept_name" />
        <result property="status" column="status"/>
        <result property="version" column="version"/>
        <result property="goodsCount" column="goods_count"/>
        <result property="goodsSum" column="goods_sum"/>
        <result property="amount" column="amount"/>
        <result property="filler" column="filler"/>
        
    </resultMap>

    <select id="listBill" resultMap="OutStockBillBriefVoResultMap">
        SELECT
            os.id,
--             os.bill_id,
            os.out_stock_kind,
            os.out_stock_type,
--             out_org_id,
--             out_org_name,
--             out_dept_id,
            os.out_dept_name,
--             out_stoc_id,
--             os.fill_date,
                  uo.ename as filler,
         
--             auditor,
--             audit_date,
--             accounter,
--             account_date,
--             rec_address_id,
--             rec_linkman,
--             rec_linkman_phone,
--             rec_address,
            os.`status`,
            os.version,
            COUNT(DISTINCT(oss.goods_id)) AS goods_count,
            SUM(oss.out_qty) AS goods_sum,
            SUM(IFNULL(oss.out_qty * osb.in_price,0)) AS amount
        FROM
            out_stock os
            LEFT OUTER JOIN out_stock_list oss ON ( oss.pid = os.id )
            LEFT OUTER JOIN
                ( select pid, goods_id, in_price from out_stock_batch
                    union
                  select pid, goods_id, in_price from out_stock_unique_code
                ) osb ON ( oss.id = osb.pid AND oss.goods_id = osb.goods_id )
--            LEFT OUTER JOIN hos_stockpile hsp ON ( osb.big_batch_code = hsp.big_batch_code AND hsp.hos_id = os.out_org_id AND hsp.stoc_id = os.out_stoc_id AND hsp.hos_goods_id = oss.goods_id AND hsp.stoc_kind = os.out_stock_type )
--            LEFT OUTER JOIN v_stockpile_hz goods ON ( goods.hos_id = os.out_org_id AND goods.stoc_id = os.out_stoc_id AND goods.hos_goods_id = oss.goods_id )
                  LEFT OUTER JOIN sys_user_org uo on uo.user_id = os.filler
      
        <where>
            os.out_org_id = #{corpId} AND os.out_stoc_id = #{stockId}
            AND os.out_stock_type IN ( SELECT pur_mode FROM apply_audit_rel where user_id =#{userId} )
            <choose>
                <when test="deptId == 'null'">
                    AND os.in_dept_id IS NULL
                </when>
                <otherwise>
                    AND os.in_dept_id = #{deptId}
                </otherwise>
            </choose>
            <if test="beginDate != null">
                <![CDATA[
                AND os.fill_date > #{beginDate}
                ]]>
            </if>
            <if test="endDate != null">
                <![CDATA[
                AND os.fill_date < #{endDate}
                ]]>
            </if>
            <choose>
                <when test="status == 'undone'">
                    AND os.status IN ( 10, 20, 90 )
                </when>
                <when test="status == 'all'">

                </when>
                <otherwise>
                    AND os.status = #{status}
                </otherwise>
            </choose>
        </where>
        GROUP BY os.id, uo.ename
        ORDER BY os.id DESC
    </select>


    <resultMap id="OutStockBillDetailResultMap" type="gyqx.spdherp.stockout.vo.OutStockBillVo">
        <id property="id" column="id"/>
        <result property="billId" column="bill_id"/>
        <result property="outStockKind" column="out_stock_kind"/>
        <result property="outStockType" column="out_stock_type"/>
        <result property="outOrgId" column="out_org_id"/>
        <result property="outOrgName" column="out_org_name" />
        <result property="outDeptId" column="out_dept_id" />
        <result property="outDeptName" column="out_dept_name" />
        <result property="outStocId" column="out_stoc_id" />
        <result property="inDeptId" column="in_dept_id" />
        <result property="fillDate" column="fill_date" />
        <result property="filler" column="filler" />
        <result property="accounterName" column="accounterName" />
        <result property="auditor" column="auditor" />
        <result property="auditorName" column="auditorName" />
        <result property="auditDate" column="audit_date" />
        <result property="accounter" column="accounter" />
        <result property="accountDate" column="account_date" />
        <result property="outOrgName" column="out_org_name" />
        <result property="recAddressId" column="rec_address_id"/>
        <result property="recLinkman" column="rec_linkman"/>
        <result property="recLinkmanPhone" column="rec_linkman_phone"/>
        <result property="recAddress" column="rec_address"/>
        <result property="status" column="status"/>
        <result property="patientName" column="patient_name"/>
        <result property="costKind" column="cost_kind"/>
        <result property="version" column="version"/>
        <result property="goodsCount" column="goods_count"/>
        <result property="goodsSum" column="goods_sum"/>
        <result property="amount" column="amount"/>
        <result property="stocLevel" column="stoc_level"/>
        <result property="patientName" column="patient_name" />
        <result property="patient" column="patient" />
        <result property="patientDeptCode" column="dept_code" />
        <result property="patientBedNum" column="bed_num" />
        <result property="tel" column="tel" />
        
        <collection property="subList" ofType="OutStockBillSubVoResultMap" select="listBillSub" column="id"/>
    </resultMap>
    <resultMap id="OutStockBillSubVoResultMap" type="gyqx.spdherp.stockout.vo.OutStockBillSubVo" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="pid" property="pid" jdbcType="VARCHAR" />
        <result column="bill_id" property="billId" jdbcType="VARCHAR" />
        <result column="source_bill_id" property="sourceBillId" jdbcType="VARCHAR" />
        <result column="out_bill_row" property="outBillRow" jdbcType="INTEGER" />
        <result column="prov_id" property="provId" jdbcType="VARCHAR" />
        <result column="prov_code" property="provCode" jdbcType="VARCHAR" />
        <result column="prov_name" property="provName" jdbcType="VARCHAR" />
        <result column="goods_id" property="goodsId" jdbcType="VARCHAR" />
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
        <result column="goods_gg" property="goodsGg" jdbcType="VARCHAR" />
        <result column="mfrs_id" property="mfrsId" jdbcType="VARCHAR" />
        <result column="mfrs_name" property="mfrsName" jdbcType="VARCHAR" />
        <result column="made" property="made" jdbcType="VARCHAR" />
        <result column="packet_code" property="packetCode" jdbcType="DOUBLE" />
        <result column="is_packet" property="isPacket" jdbcType="CHAR" />
        <result column="is_unique" property="isUnique" jdbcType="CHAR" />
        <result column="batch_code" property="batchCode" jdbcType="VARCHAR" />
        <result column="certificate_code" property="certificateCode" jdbcType="VARCHAR" />
        <result column="sterilization_date" property="sterilizationDate" jdbcType="TIMESTAMP" />
        <result column="sterilization_code" property="sterilizationCode" jdbcType="VARCHAR" />
        <result column="sterilization_end_date" property="sterilizationEndDate" jdbcType="TIMESTAMP" />
        <result column="expdt_end_date" property="expdtEndDate" jdbcType="TIMESTAMP" />
        <result column="unit" property="unit" jdbcType="VARCHAR" />
        <result column="out_qty" property="outQty" jdbcType="DOUBLE" />
        <result column="out_packet_qty" property="outPacketQty" jdbcType="DOUBLE" />
        <result column="master_code" property="masterCode" jdbcType="VARCHAR" />
        <result column="sec_code" property="secCode" jdbcType="VARCHAR" />
        <result column="hibc_code" property="hibcCode" jdbcType="VARCHAR" />
        <result column="shelf_id" property="shelfId" jdbcType="VARCHAR" />
        <result column="version" property="version" jdbcType="INTEGER" />
        <result column="price" property="price" jdbcType="DOUBLE" />
        <result column="avl_qty" property="avlQty" jdbcType="DOUBLE" />
        <result column="req_qty" property="reqQty" jdbcType="DOUBLE" />
        <result column="sent_qty" property="sentQty" jdbcType="DOUBLE" />
        <result column="ef_point" property="efPoint" jdbcType="VARCHAR" />
        <result column="saleBillId" property="saleBillId" jdbcType="VARCHAR" />
        <result column="hit_code" property="hitCode" jdbcType="VARCHAR" />
        
    </resultMap>
    <select id="getBillDetail" resultMap="OutStockBillDetailResultMap">
        SELECT
        os.id,
        os.bill_id,
        os.out_stock_kind,
        os.out_stock_type,
        os.out_org_id,
        os.out_org_name,
        os.out_dept_id,
        os.out_dept_name,
        os.out_stoc_id,
        os.in_dept_id,
        os.fill_date,
        os.filler,
        (SELECT ename from sys_user_org userOrg WHERE userOrg.user_id = auditor LIMIT 1 ) as auditorName,
        os.auditor,
        (SELECT ename from sys_user_org userOrg WHERE userOrg.user_id = accounter LIMIT 1 ) as accounterName,
        (SELECT tel from sys_user_org userOrg WHERE userOrg.user_id = accounter LIMIT 1 ) as tel,
        
        os.audit_date,
        os.accounter,
        os.account_date,
        os.rec_address_id,
        os.rec_linkman,
        os.rec_linkman_phone,
        os.rec_address,
        os.`status`,
        os.cost_kind,
        stoc.stoc_level,
        os.version,
        os.patient_name,
        si.patient_name AS patient,
        sihi.bed_num,
        sihi.dept_code
        FROM
        out_stock os
        LEFT OUTER JOIN stoc_info stoc ON ( stoc.id = os.out_stoc_id )
        LEFT OUTER JOIN sicker_info si ON ( os.patient_name = si.patient_in_hos_id AND os.in_org_id = si.hos_id )
        LEFT OUTER JOIN sicker_in_hospital_info sihi ON ( sihi.patient_id = si.patient_id AND si.hos_id = sihi.hos_id )
        <where>
            os.out_stock_type IN ( SELECT pur_mode FROM apply_audit_rel where user_id =#{userId} )
            AND os.id = #{id}
        </where>
        ORDER BY os.id DESC
    </select>

    <sql id="OutStockBillSubVo_Column_List" >
        ${alias}.id, ${alias}.pid, ${alias}.bill_id, ${alias}.source_bill_id, ${alias}.out_bill_row, ${alias}.prov_id, ${alias}.prov_code,
        ${alias}.prov_name, ${alias}.goods_id,${alias}.goods_name, ${alias}.goods_gg, ${alias}.mfrs_id, ${alias}.mfrs_name,
        ${alias}.made, ${alias}.packet_code, ${alias}.is_packet, ${alias}.is_unique,${alias}.batch_code,${alias}.certificate_code, ${alias}.sterilization_date, ${alias}.sterilization_code,
        ${alias}.sterilization_end_date, ${alias}.expdt_end_date,${alias}.unit, ${alias}.out_qty, ${alias}.out_packet_qty, ${alias}.master_code,
        ${alias}.sec_code, ${alias}.hibc_code, ${alias}.shelf_id, ${alias}.version
    </sql>
    <select id="listBillSub" resultMap="OutStockBillSubVoResultMap">
        SELECT
          <include refid="OutStockBillSubVo_Column_List"><property name="alias" value="oss"/></include>,
          osb.in_price AS price,
          stockpile.qty AS avl_qty,
          bs.qty AS req_qty,
          bs.send_qty AS sent_qty,
          if(ifnull(oss.expdt_end_date,'9999-12-31')>sysdate()||oss.expdt_end_date>sysdate(),'1','0') as ef_point,
	      dbl.sale_bill_id AS saleBillId,
	      vvv.hit_code
        FROM out_stock_list oss
        LEFT OUTER JOIN
          ( select pid, goods_id, goods_batch_id, in_price from out_stock_batch where bill_id = #{id}
            union
            select pid, goods_id, goods_batch_id, in_price from out_stock_unique_code where bill_id = #{id}
          ) osb ON ( oss.id = osb.pid AND oss.goods_id = osb.goods_id )
        LEFT OUTER JOIN out_stock os ON ( os.id = oss.pid )
--        LEFT OUTER JOIN hos_stockpile hsp ON ( osb.big_batch_code = hsp.big_batch_code AND hsp.hos_id = os.out_org_id AND hsp.stoc_id = os.out_stoc_id AND hsp.hos_goods_id = oss.goods_id AND hsp.stoc_kind = os.out_stock_type )
        LEFT OUTER JOIN (select DISTINCT sale_bill_id ,hos_goods_id,bill_id from distr_bill_list)  dbl ON ( osb.goods_batch_id = dbl.bill_id AND osb.goods_id = dbl.hos_goods_id )
        LEFT OUTER JOIN v_stockpile_hz stockpile ON ( stockpile.hos_id = os.out_org_id AND stockpile.stoc_id = os.out_stoc_id AND stockpile.hos_goods_id = oss.goods_id AND stockpile.stoc_kind = os.out_stock_type)
        LEFT OUTER JOIN dept_buy_sub bs ON ( bs.id = oss.source_bill_id )
        LEFT OUTER JOIN v_pro_hos_goodsinfo vvv ON ( vvv.id = oss.goods_id )
        WHERE oss.pid = #{id}
    </select>

    <select id="stockpilebatchOutstock" resultType="java.lang.Integer">
        call p_stockpilebatch_outstock(#{id},#{accounter},#{version},@p_out) ;SELECT @p_out;
    </select>

</mapper>
