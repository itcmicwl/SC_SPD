<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 引入接口，只要实现接口的方法就会调用对应接口方法的 select id -->
<mapper namespace="gyqx.spdherp.deptMgr.dao.mapper.IDeptGoodsAuditMapper">
	
	<!-- 查询科室产品申请信息 -->
	<select id="getDeptGoodsAuditList"  resultMap="deptGoodsApplyMap"  parameterType="gyqx.spdherp.deptMgr.vo.DeptGoodsApplyVo">
		SELECT DISTINCT
			d.id as id,
			d.hos_goods_id as goodsId,
			h.goods_name as goodsName,
			h.goods_gg as goodsGg,
			h.unit as unit,
			h.made as made,
			h.mfrs_id as mfrsId,
			h.packeage as packeage,
			h.brand as brand,
			d.status as status,
			d.version as version,
			d.apply_reason as applyReason,
			d.audit_view as auditView,
			h.packeage as packetCode,
			d.hos_id as hosId,
			d.dept_id as deptId,
			s.ename as deptName,
			d.auditer as auditer,
			m.mfrs_name as mfrsName,
			h.pur_Mode as purMode,
			b.cname as hosName,
			h.unique_code_strategy as isUnique,
			h.erp_code as erpCode,
			h.mi_code as miCode
		FROM
			dept_goods_apply d
		JOIN v_pro_hos_goodsinfo h ON h.id = d.hos_goods_id
		JOIN bas_mfrs_info m ON m.id = h.mfrs_id
		join bas_company_info b on b.id = h.hos_id
		join sys_org s on d.dept_id=s.id
		join dept_goods_audit_relation r on (d.hos_id=r.hos_id and d.dept_id=r.dept_id)
		WHERE
			d.STATUS = 10
			and r.auditer=#{auditer}
		<if test='goodsName != null and goodsName !=""'>  
			AND 
			(
				h.goods_name LIKE CONCAT('%',#{goodsName},'%') 
				or h.short_pinyin LIKE CONCAT('%',#{goodsName},'%')
			) 
		</if>
		<if test='status != null and status !=""'>  
			AND h.status = #{status} 
		</if>
	</select>
	
	<insert id="importDeptGoodsInfo" parameterType="java.util.List">
		INSERT INTO dept_goods_info (
			id,
			erp_code,
			saleman_id,
			brand,
			hos_id,
			hos_name,
			dept_id,
			dept_name,
			goods_id,
			goods_name,
			goods_gg,
			unit,
			mfrs_id,
			mfrs_name,
			made,
			stoc_upper,
			stoc_lower,
			is_packet,
			is_unique,
			packet_code,
			is_mix,
			pur_mode,
			stoc_id,
			version,
			req_num,
			mi_code,
			last_update_datetime,
			saleman_code
		)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(
				#{item.id},
				#{item.erpCode},
				#{item.salemanId},
				#{item.brand},
				#{item.hosId},
				#{item.hosName},
				#{item.deptId},
				#{item.deptName},
				#{item.goodsId},
				#{item.goodsName},
				#{item.goodsGg},
				#{item.unit},
				#{item.mfrsId},
				#{item.mfrsName},
				#{item.made},
				#{item.stocUpper},
				#{item.stocLower},
				#{item.isPacket},
				#{item.isUnique},
				#{item.packetCode},
				#{item.isMix},
				#{item.purMode},
				#{item.stocId},
				#{item.version},
				#{item.reqNum},
				#{item.miCode},
				sysdate(),
				#{item.salemanCode}
			)
		</foreach>
	</insert>
	
	<select id="getApplyGoodsList"  resultType="gyqx.spdherp.deptMgr.vo.DeptGoodsApplyVo" parameterType="java.util.List">
		SELECT
			UUID() as id,
			v.erp_code as erpCode,
			cc.val as salemanId, 
			v.brand,
			v.hos_id as hosId,
			v.hos_name as hosName,
			d.dept_id as deptId,
			s.ename as deptName, 
			v.id as goodsId,
			v.goods_name as goodsName,
			v.goods_gg goodsGg,
			v.his_unit as unit,
			v.mfrs_id as mfrsId,
			v.mfrs_name mfrsName,
			v.made,
			0 as stocUpper,
			0 as stocLower,
			0 as isPacket,
			v.unique_code_strategy as isUnique,
			v.packeage as packetCode,
			0 as isMix,
			v.pur_mode as purMode,
			NULL as stocId,
			0 as version,
			1 as reqNum,
			mi_code as miCode,
			o.erp_code as salemanCode
		FROM
			dept_goods_apply d
		LEFT JOIN v_pro_hos_goodsinfo v ON d.hos_goods_id = v.id
		LEFT JOIN sys_org s ON s.id = d.dept_id
		LEFT JOIN sys_config cc ON cc.ename = 'salemanId'
		LEFT JOIN sys_user_org o ON o.user_id = cc.val
		WHERE
			d.`status` = 10
		AND d.id in
			<foreach collection="list" item="id" index="index" open="(" separator="," close=")">
				#{id}
			</foreach>
		AND NOT EXISTS (
			SELECT
				1
			FROM
				dept_goods_info
			WHERE
				dept_id = d.dept_id
			AND goods_id = d.hos_goods_id
		)
	</select>
	
	<update id="updateDeptApplyGoodsStatus">
       UPDATE dept_goods_apply d
		SET STATUS = 20,
		auditer = #{userCode},
		audit_time=sysdate(),
		last_update_datetime=sysdate(),
		version=version+1
		WHERE
			id IN 
			<foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
				#{id}
			</foreach>
		AND EXISTS (
			SELECT
				1
			FROM
				dept_goods_info
			WHERE
				dept_id = d.dept_id
			AND goods_id = d.hos_goods_id
		)
    </update>
	
	<update id="deptGoodsAuditList" parameterType="gyqx.spdherp.deptMgr.vo.DeptGoodsApplyVo" >
		update dept_goods_apply
		<set>
			<if test="status != null">`status`=#{status},</if>
			<if test="auditView != null">audit_view=#{auditView},</if>
			<if test="auditer != null">auditer=#{auditer},</if>
			<if test="status == 20">audit_time = sysdate(),</if>
			audit_time=sysdate(),
			last_update_datetime = sysdate(),
			version = version+1
		</set>
		<where>
			and id = #{id}
			and version= #{version}
		</where>
	</update>
	
	<resultMap type="gyqx.spdherp.deptMgr.vo.DeptGoodsApplyVo" id="deptGoodsApplyMap">  
		<id property="id" column="id"/>
		<result property="goodsId" column="goodsId"/>
		<result property="goodsName" column="goodsName"/>
		<result property="goodsGg" column="goodsGg"/>
		<result property="unit" column="unit"/>
		<result property="stocUpper" column="stocUpper"/>
		<result property="packetCode" column="packetCode"/>
		<result property="applyReason" column="applyReason"/>
		<result property="auditView" column="auditView"/>
		<result property="status" column="status"/>
		<result property="version" column="version"/>
		<result property="hosId" column="hosId"/>
		<result property="deptId" column="deptId"/>
		<result property="auditer" column="auditer"/>
		<result property="mfrsName" column="mfrsName"/>
	</resultMap> 

</mapper>